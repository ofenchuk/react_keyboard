{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","document","addEventListener","e","setState","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,IAAKG,EAAEH,WAP7B,kCAWE,WACEC,SAASI,oBAAoB,QAASC,KAAKF,UAAU,KAZzD,oBAeE,WACE,OACE,qBAAKG,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,KAAKP,MAAMC,IAAX,mCAC+BM,KAAKP,MAAMC,IAD1C,KAEG,kCArBd,GAAyBQ,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.06f5b336.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (e) => {\n      this.setState({ key: e.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.setState, false);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}